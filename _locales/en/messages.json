{
    "appName": {
        "message": "SmartCopy"
    },
    "appShortName": {
        "message": "SmartCopy"
    },
    "appDesc": {
        "message": "Tool for copying genealogical data into Geni."
    },
    "consistencyCheck": {
        "message": "Consistency Check"
    },
    "contains_incorrect_uppercase_lowercase_in_name": {
        "message": "$person$ contains incorrect use of uppercase/lowercase in $pronoun$ name ($lang$).",
        "placeholders": {
            "person": {
                "content": "$1"
            },
            "pronoun": {
                "content": "$2"
            },
            "lang": {
                "content": "$3"
            }
        }
    },
    "contains_incorrect_uppercase_lowercase_in_name_default": {
        "message": "$person$ contains incorrect use of uppercase/lowercase in $pronoun$ name.",
        "placeholders": {
            "person": {
                "content": "$1"
            },
            "pronoun": {
                "content": "$2"
            }
        }
    },
    "contains_patronym_in_first_name": {
        "message": "$person$ contains a patro/matronym in $pronoun$ first name ($lang$).",
        "placeholders": {
            "person": {
                "content": "$1"
            },
            "pronoun": {
                "content": "$2"
            },
            "lang": {
                "content": "$3"
            }
        }
    },
    "contains_patronym_in_first_name_default": {
        "message": "$person$ contains a patro/matronym in $pronoun$ first name.",
        "placeholders": {
            "person": {
                "content": "$1"
            },
            "pronoun": {
                "content": "$2"
            }
        }
    },
    "contains_non_patronym_in_middle_name": {
        "message": "$person$ contains a non-patro/matronym in $pronoun$ middle name ($lang$).",
        "placeholders": {
            "person": {
                "content": "$1"
            },
            "pronoun": {
                "content": "$2"
            },
            "lang": {
                "content": "$3"
            }
        }
    },
    "contains_non_patronym_in_middle_name_default": {
        "message": "$person$ contains a non-patro/matronym in $pronoun$ middle name.",
        "placeholders": {
            "person": {
                "content": "$1"
            },
            "pronoun": {
                "content": "$2"
            }
        }
    },
    "living": {
        "message": "living"
    },
    "claimed": {
        "message": "claimed"
    },
    "fixCase": {
        "message": "fix case"
    },
    "fixed": {
        "message": "fixed"
    },
    "fixName": {
        "message": "fix name"
    },
    "fixSpace": {
        "message": "fix space"
    },
    "fixSuffix": {
        "message": "fix suffix"
    },
    "fixTitle": {
        "message": "fix title"
    },
    "makePublic": {
        "message": "make public"
    },
    "numFamilyMembersBornBeforeYearAreSetAsPrivate": {
        "message": "$count$ family members born before c.$year$ are set as private.",
        "placeholders": {
            "count": {
                "content": "$1"
            },
            "year": {
                "content": "$2"
            }
        }
    },
    "personWasBornBeforeYearAndIsSetAsPrivate": {
        "message": "$person$ was born before c.$year$ and is set as private.",
        "placeholders": {
            "person": {
                "content": "$1"
            },
            "year": {
                "content": "$2"
            }
        }
    },
    "Research_this_Person": {
        "message": "Research this Person"
    },
    "All_Collections": {
        "message": "All Collections"
    },
    "Collections": {
        "message": "Collections"
    },
    "Publications": {
        "message": "Publications"
    },
    "Holocaust": {
        "message": "Holocaust"
    },
    "Name_Search": {
        "message": "Name Search"
    },
    "Gravestones": {
        "message": "Gravestones"
    },
    "Genealogies": {
        "message": "Genealogies"
    },
    "Genealogy": {
        "message": "Genealogy"
    },
    "Geni_Search": {
        "message": "Geni Search"
    },
    "Google_Search": {
        "message": "Google Search"
    },
    "Records": {
        "message": "Records"
    },
    "Messageboard": {
        "message": "Messageboard"
    },
    "Newspapers": {
        "message": "Newspapers"
    },
    "Books": {
        "message": "Books"
    },
    "Obituaries": {
        "message": "Obituaries"
    },
    "Other_Resources": {
        "message": "Other Resources"
    },
    "Unable_to_create_research_links_on_this_profile": {
        "message": "Unable to create research links on this profile."
    },
    "Loading___": {
        "message": "Loading..."
    },
    "Ancestor_Graph": {
        "message": "Ancestor Graph"
    },
    "Descendant_Graph": {
        "message": "Descendant Graph"
    },
    "History_Search": {
        "message": "History Search"
    },
    "Configuration": {
        "message": "Configuration"
    },
    "Copy_Preferences": {
        "message": "Copy Preferences"
    },
    "Consistency_Checks": {
        "message": "Consistency Checks"
    },
    "Geni_Customization": {
        "message": "Geni Customization"
    },
    "Note_Dates_that_contain_Between_Before_and_After___": {
        "message": "Note: Dates that contain Between, Before, and After are not compared in consistency checks.  Dates with Circa are considered as exact dates."
    },
    "Run_consistency_checks_when_viewing_Geni_profiles": {
        "message": "Run consistency checks when viewing Geni profiles."
    },
    "Age_difference_between_partners_is_significant": {
        "message": "Age difference between partners is significant"
    },
    "Maiden_name_same_as_husbands_last_name": {
        "message": "Maiden name same as husband's last name"
    },
    "Husband_and_wife_death_dates_the_same": {
        "message": "Husband and wife death dates the same"
    },
    "Husband_death_date_same_as_marriage_date": {
        "message": "Husband death date same as marriage date"
    },
    "Wife_death_date_same_as_marriage_date": {
        "message": "Wife death date same as marriage date"
    },
    "Born_after_marriage": {
        "message": "Born after marriage"
    },
    "Died_before_marriage": {
        "message": "Died before marriage"
    },
    "Implausible_marriage_age_too_young": {
        "message": "Implausible marriage age, too young"
    },
    "Siblings_ages_too_close_together": {
        "message": "Siblings ages too close together"
    },
    "Born_before_parent_birth": {
        "message": "Born before parent birth"
    },
    "Born_after_parent_death": {
        "message": "Born after parent death"
    },
    "Death_before_baptism_date": {
        "message": "Death before baptism date"
    },
    "Death_after_burial_date": {
        "message": "Death after burial date"
    },
    "Parent_too_young_for_childs_birth": {
        "message": "Parent too young for child's birth"
    },
    "Mother_too_old_for_childs_birth": {
        "message": "Mother too old for child's birth"
    },
    "Born_before_parent_marriage": {
        "message": "Born before parent marriage"
    },
    "Excessive_Age": {
        "message": "Excessive Age"
    },
    "Born_after_death": {
        "message": "Born after death"
    },
    "Name_contains_double_space": {
        "message": "Name contains double space"
    },
    "Name_contains_alias": {
        "message": "Name contains alias"
    },
    "Name_contains_improper_use_of_uppercase_lowercase": {
        "message": "Name contains improper use of uppercase/lowercase"
    },
    "First_Name_ends_in_suffix_eg___": {
        "message": "First Name ends in suffix (eg. 'i','ii','iii','iv','jr','sr')"
    },
    "Salutation_or_relationship_in_title_eg___": {
        "message": "Salutation or relationship in title (eg. 'Mr', 'Mrs')"
    },
    "Salutation_or_relationship_in_suffix_eg___": {
        "message": "Salutation or relationship in suffix (eg. 'Mr', 'Mrs')"
    },
    "Relationship_cycle_in_immediate_family": {
        "message": "Relationship cycle in immediate family"
    },
    "Check_date_formatting_for_inconsistent_values": {
        "message": "Check date formatting for inconsistent values"
    },
    "Check_for_pending_data_conflict_resolution": {
        "message": "Check for pending data conflict resolution"
    },
    "Self_check_profile_for_inconsistent_dates_and_values": {
        "message": "Self-check profile for inconsistent dates and values."
    },
    "Check_name_fields_for_improper_values": {
        "message": "Check name fields for improper values"
    },
    "Check_name_fields_for_living_profiles": {
        "message": "Exclude living profiles from quick fix"
    },
    "Check_profile_for_pending_data_conflicts": {
        "message": "Check profile for pending data conflicts"
    },
    "Check_date_values_for_irregular_formatting": {
        "message": "Check date values for irregular formatting"
    },
    "Check_when_location_is_missing_a_country": {
        "message": "Check when location is missing a country"
    },
    "Maximum_year_to_be_private": {
        "message": "Maximum year to be private:"
    },
    "Maximum_age": {
        "message": "Maximum age:"
    },
    "Check_the_dates_of_children_against_their_parents": {
        "message": "Check the dates of children against their parents."
    },
    "Check_child_is_born_after_parent_marriage": {
        "message": "Check child is born after parent marriage"
    },
    "Age_the_parent_is_too_young_to_have_a_child": {
        "message": "Age the parent is too young to have a child"
    },
    "Age_the_mother_is_too_old_to_have_a_child": {
        "message": "Age the mother is too old to have a child"
    },
    "Check_the_values_of_partner_spouses_against_each_other": {
        "message": "Check the values of partner/spouses against each other."
    },
    "Identify_possible_maiden_name_copy_issues": {
        "message": "Identify possible maiden name copy issues"
    },
    "Age_the_spouse_is_too_young_to_be_married": {
        "message": "Age the spouse is too young to be married"
    },
    "Maximum_age_difference_between_spouses": {
        "message": "Maximum age difference between spouses"
    },
    "Check_siblings_birth_are_over_": {
        "message": "Check siblings birth are over "
    },
    "_months_apart_excl_twins": {
        "message": " months apart (excl. twins)."
    },
    "Future_options_to_add_features_to_Geni": {
        "message": "Future options to add features to Geni."
    },
    "This_profile_is_not_in_the_World_Family_Tree": {
        "message": "This profile is not in the World Family Tree."
    },
    "Add_to_History": {
        "message": "Add to History"
    },
    "Show_History": {
        "message": "Show History"
    },
    "Clear_History": {
        "message": "Clear History"
    },
    "Notice___Please_Read": {
        "message": "Notice - Please Read"
    },
    "SmartCopy_will_no_longer_do_geo_location_lookups___": {
        "message": "SmartCopy will no longer automatically do geo-location lookups due to the cost of Google's service. While this is sad news, Geni has recently provided the feature of doing geolocation lookups <i>after</i> submission. When a location is submitted via the place field, Geni will do the query and populate the location fields on the website.  Alternatively, you can specify your own Google API key in the configuration. You also still have the option to manually fill out the location data in SmartCopy by clicking the globe icon $globe_icon$ and if you want to disable Geni's geolocation lookup, you can do so in the SmartCopy configuration.",
        "placeholders": {
            "globe_icon": {
                "content": "$1"
            }
        }
    },
    "Close": {
        "message": "Close"
    },
    "Display_Add_Biography_button_in_About": {
        "message": "Display Add Biography button in About"
    },
    "Add_Biography": {
        "message": "Add biography"
    },
    "Export_Profiles_button_on_Project_Actions": {
        "message": "Export Profiles button on Project Actions"
    },
    "Export_Profiles": {
        "message": "Export Profiles"
    },


   "SmartCopy_does_not_currently_support_parsing": {
        "message": "SmartCopy does not currently support parsing this page / site / collection."
    },
    "SmartCopy_is_having_difficulty_reading_the_page": {
    "message": "SmartCopy is having difficulty reading the page.  Try refreshing the page."
    },
    "This_website_is_not_yet_supported_by_SmartCopy": {
        "message": "This website is not yet supported by SmartCopy."
    },

    "Selection": {
    "message": "Selection"
    },
    "Simplify_form_by_hiding_unused_fields": {
    "message": "Simplify form by hiding unused fields"
    },
    "Enable_photo_checkbox_auto_selection": {
    "message": "Enable photo checkbox auto-selection"
    },
    "Reminder_user_responsible": {
    "message": "Reminder: The user is responsible for<br>obtaining any required permission from<br>the photographer when copying images."
    },
    "Exclude_private_profile_auto_select": {
    "message": "Exclude <private> profile auto-select"
    },
    "Est_burial_date_from_death_if_location": {
    "message": "Est. burial date from death if location"
    },
    "This_change_will_take_effect_at_next_use": {
    "message": "This change will take effect at next use."
    },
    "Location": {
    "message": "Location"
    },
    "Enable_Geolocation": {
    "message": "Enable Geolocation"
    },
    "API_Key": {
    "message": "API Key"
    },
    "Location_fields_auto_select_one_select_all": {
    "message": "Location fields select one select all"
    },
    "Naming": {
    "message": "Naming"
    },
    "Auto_populate_empty_birth_name_fields": {
    "message": "Auto populate empty birth name fields"
    },
    "Parse_for_middle_names_automatically": {
    "message": "Parse for middle names automatically"
    },
    "Auto_adjust_the_names_for_mixed_case": {
    "message": "Auto-adjust the names for mixed-case"
    },
    "Force_compound_lastname_to_lowercase": {
    "message": "Force compound lasstname to lowercase"
    },
    "Default_children_to_likely_Geni_parent": {
    "message": "Default children to likely Geni parent"
    },
    "Default_deceased_profiles_to_public": {
    "message": "Default deceased profiles to public"
    },
    "Add_reference_to_Geni_s_About_section": {
    "message": "Add reference to Geni's About section"
    },
    "Display_the_Geni_side_data_by_default": {
    "message": "Display the Geni side data by default"
    },

    "Please_select_one_of_the_Matches": {
    "message": "Please select one of the Matches on this results page."
    },

    "_year_age_difference_between_": {
        "message": " year age difference between "
    },
    "Birth_Surname_of_": {
        "message": "Birth Surname of "
    },
    "_is_the_same_as_the_last_name_of_": {
        "message": " is the same as the last name of "
    },
    "Death_date_of_": {
        "message": "Death date of "
    },
    "_is_the_same_as_the_death_date_of_": {
        "message": " is the same as the death date of "
    },
    "_is_the_same_as_": {
        "message": " is the same as "
    },
    "_marriage_date": {
        "message": " marriage date"
    },
    "_born_after_": {
        "message": " born after "
    },
    "_died_before_": {
        "message": " died before "
    },
    "_years_old_for_": {
        "message": " years old for "
    },
    "_marriage": {
        "message": " marriage"
    },
    "Birth_date_of_": {
        "message": "Birth date of "
    },
    "_and_": {
        "message": " and "
    },
    "_are_within_": {
        "message": " are within "
    },
    "_months": {
        "message": " months"
    },
    "_born_before_the_birth_of_": {
        "message": " born before the birth of "
    },
    "death": {
        "message": "death"
    },
    "_born_after_the_death_of_": {
        "message": " born after the death of "
    },
    "_is_under_": {
        "message": " is under "
    },
    "_years_old_for_the_birth_of_": {
        "message": " years old for the birth of "
    },
    "_is_over_": {
        "message": " is over "
    },
    "_born_before_the_marriage_of_": {
        "message": " born before the marriage of "
    },
    "_parents_": {
        "message": " ouders "
    },
    "_has_pending_": {
        "message": " has pending "
    },
    "data_conflicts": {
        "message": "data conflicts"
    },
    "The_age_of_": {
        "message": "The age of "
    },
    "_exceeds_": {
        "message": " exceeds "
    },
    "_years": {
        "message": " years"
    },
    "_is_after_": {
        "message": " is after "
    },
    "_death_date": {
        "message": " death date"
    },
    "Baptism_date_of_": {
        "message": "Baptism date of "
    },
    "_is_before_": {
        "message": " is before "
    },
    "_birth_date": {
        "message": " birth date"
    },
    "_burial_date": {
        "message": " burial date"
    },
    "_contains_a_double_space_in_": {
        "message": " contains a double space in "
    },
    "first_name": {
        "message": "first name"
    },
    "_contains_a_double_or_trailing_space_in_": {
        "message": " contains a double or trailing space in "
    },
    "_names": {
        "message": " names"
    },
    "_contains_an_alias_in_": {
        "message": " contains an alias in "
    },
    "_appears_to_contain_a_suffix_in_": {
        "message": " appears to contain a suffix in "
    },
    "Move_Suffix": {
        "message": "Move Suffix"
    },
    "_contains_improper_use_of_salutation_in_": {
        "message": " contains improper use of salutation in "
    },
    "_title": {
        "message": " title"
    },
    "Remove_salutation": {
        "message": "Remove salutation"
    },
    "_contains_improper_use_of_relationship_in_": {
        "message": " contains improper use of relationship in "
    },
    "_suffix": {
        "message": " suffix"
    },
    "Remove_relationship": {
        "message": "Remove relationship"
    },
    "_contains_improper_use_of_a_numbering_scheme_in_": {
        "message": " contains improper use of a numbering scheme in "
    },
    "Remove_numeric": {
        "message": "Remove numeric"
    },
    "_is_in_a_relationship_cycle_within_the_immediate_family": {
        "message": " is in a relationship cycle within the immediate family"
    },
    "_contains_an_invalid_": {
        "message": " contains an invalid "
    },
    "_date_month_greater_than_12": {
        "message": " date, month greater than 12."
    },
    "_date_day_greater_than_31": {
        "message": " date, day greater than 31."
    },
    "_date": {
        "message": " date"
    },
    "_contains_an_incomplete_": {
        "message": " contains an incomplete "
    },
    "_date_missing_month": {
        "message": " date, missing month."
    },
    "_date_missing_year": {
        "message": " date, missing year."
    },
    "_contains_a_": {
        "message": " contains a "
    },
    "_location_without_a_country": {
        "message": " location without a country"
    },
    "his": {
        "message": "his"
    },
    "her": {
        "message": "her"
    },
    "their": {
        "message": "their"
    },
    "mother": {
        "message": "mother"
    },
    "father": {
        "message": "father"
    },
    "parent": {
        "message": "parent"
    },
    "brother": {
        "message": "brother"
    },
    "sibling": {
        "message": "sibling"
    },
    "wife": {
        "message": "wife"
    },
    "husband": {
        "message": "husband"
    },
    "partner": {
        "message": "partner"
    }
}